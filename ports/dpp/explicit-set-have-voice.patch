diff --git a/library-vcpkg/CMakeLists.txt b/library-vcpkg/CMakeLists.txt
index 3148b616..82bed881 100644
--- a/library-vcpkg/CMakeLists.txt
+++ b/library-vcpkg/CMakeLists.txt
@@ -15,15 +15,13 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #
+set(HAVE_VOICE 1)
+# Fake ssl version number for broken third party build scripts. Does not matter what
+# value is set here so long as it is >= 1.1.1
 
 add_compile_definitions(HAVE_VOICE)
 
-if (HAVE_VOICE)
-	file(GLOB THE_SOURCES "${DPP_ROOT_PATH}/src/dpp/events/*.cpp" "${modules_dir}/dpp/voice/enabled/*.cpp" "${DPP_ROOT_PATH}/dpp/dave/*.cpp" "${DPP_ROOT_PATH}/src/dpp/cluster/*.cpp" "${DPP_ROOT_PATH}/src/dpp/*.cpp" "${DPP_ROOT_PATH}/src/dpp/*.rc")
-else()
-	file(GLOB THE_SOURCES "${DPP_ROOT_PATH}/src/dpp/events/*.cpp" "${modules_dir}/dpp/voice/stub/*.cpp" "${DPP_ROOT_PATH}/src/dpp/cluster/*.cpp" "${DPP_ROOT_PATH}/src/dpp/*.cpp" "${DPP_ROOT_PATH}/src/dpp/*.rc")
-endif()
-
+file(GLOB THE_SOURCES "${DPP_ROOT_PATH}/src/dpp/events/*.cpp" "${DPP_ROOT_PATH}/src/dpp/voice/enabled/*.cpp" "${DPP_ROOT_PATH}/src/dpp/dave/*.cpp" "${DPP_ROOT_PATH}/src/dpp/cluster/*.cpp" "${DPP_ROOT_PATH}/src/dpp/*.cpp" "${DPP_ROOT_PATH}/src/dpp/*.rc")
 
 set(LIB_NAME "${PROJECT_NAME}")
 
@@ -56,8 +54,6 @@ if(WIN32)
 	add_compile_definitions(WIN32_LEAN_AND_MEAN)
 	add_compile_definitions(_CRT_SECURE_NO_WARNINGS)
 	add_compile_definitions(_CRT_NONSTDC_NO_DEPRECATE)
-	# Fake an ssl version number to satisfy MLSPP
-	set(OPENSSL_VERSION "1.1.1f")
 endif()
 
 target_compile_options(
@@ -87,13 +83,6 @@ target_include_directories(
 	"$<INSTALL_INTERFACE:include>"
 )
 
-if (HAVE_VOICE)
-	add_subdirectory("${DPP_ROOT_PATH}/mlspp" "mlspp")
-	include_directories("${DPP_ROOT_PATH}/mlspp/include")
-	include_directories("${DPP_ROOT_PATH}/mlspp/lib/bytes/include")
-	include_directories("${DPP_ROOT_PATH}/mlspp/lib/hpke/include")
-endif()
-
 set_target_properties(
 	"${LIB_NAME}" PROPERTIES
 	OUTPUT_NAME "dpp"
@@ -110,6 +99,11 @@ find_package(OpenSSL REQUIRED)
 find_package(Opus CONFIG REQUIRED)
 find_package(ZLIB REQUIRED)
 
+add_subdirectory("${DPP_ROOT_PATH}/mlspp" "mlspp")
+include_directories("${DPP_ROOT_PATH}/mlspp/include")
+include_directories("${DPP_ROOT_PATH}/mlspp/lib/bytes/include")
+include_directories("${DPP_ROOT_PATH}/mlspp/lib/hpke/include")
+
 target_link_libraries(
 	"${LIB_NAME}" PUBLIC
 	$<$<TARGET_EXISTS:nlohmann_json::nlohmann_json>:nlohmann_json::nlohmann_json>
@@ -118,20 +112,13 @@ target_link_libraries(
 	$<$<TARGET_EXISTS:Opus::opus>:Opus::opus>
 	$<$<TARGET_EXISTS:ZLIB::ZLIB>:ZLIB::ZLIB>
 	$<$<TARGET_EXISTS:Threads::Threads>:Threads::Threads>
+	$<$<PLATFORM_ID:Windows>:mlspp.lib:mlspp.a>
+	$<$<PLATFORM_ID:Windows>:mls_vectors.lib:mls_vectors.a>
+	$<$<PLATFORM_ID:Windows>:bytes.lib:bytes.a>
+	$<$<PLATFORM_ID:Windows>:tls_syntax.lib:tls_syntax.a>
+	$<$<PLATFORM_ID:Windows>:hpke.lib:hpke.a>
 )
 
-if (HAVE_VOICE)
-	# Private statically linked dependencies
-	target_link_libraries(
-		${LIB_NAME} PRIVATE
-		mlspp
-		mls_vectors
-		bytes
-		tls_syntax
-		hpke
-	)
-endif()
-
 set(CONFIG_FILE_NAME "${PROJECT_NAME}Config.cmake")
 set(EXPORTED_TARGETS_NAME "${PROJECT_NAME}Targets")
 set(EXPORTED_TARGETS_FILE_NAME "${EXPORTED_TARGETS_NAME}.cmake")
@@ -158,6 +145,7 @@ write_basic_package_version_file(
 	COMPATIBILITY AnyNewerVersion
 )
 
+# Private statically linked dependencies
 install(
 	DIRECTORY "${DPP_ROOT_PATH}/include/"
 	DESTINATION "include"
diff --git a/src/dpp/discordvoiceclient.cpp b/src/dpp/discordvoiceclient.cpp
index 64e15982..ddc11430 100644
--- a/src/dpp/discordvoiceclient.cpp
+++ b/src/dpp/discordvoiceclient.cpp
@@ -20,6 +20,7 @@
  *
  ************************************************************************************/
 
+#include <dpp/export.h>
 #ifdef _WIN32
 	#include <WinSock2.h>
 	#include <WS2tcpip.h>
